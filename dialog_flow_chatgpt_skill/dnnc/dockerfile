# syntax=docker/dockerfile:1

FROM pytorch/pytorch:1.6.0-cuda10.1-cudnn7-runtime as base

RUN apt-get update && apt-get install -y gnupg2
RUN apt install -y curl
RUN apt-get install -y --allow-unauthenticated wget

RUN apt-key del 7fa2af80  && \
    rm -f /etc/apt/sources.list.d/cuda*.list && \
    curl https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-keyring_1.0-1_all.deb \
    -o cuda-keyring_1.0-1_all.deb && \
    dpkg -i cuda-keyring_1.0-1_all.deb

ARG SERVICE_PORT
ENV SERVICE_PORT ${SERVICE_PORT}
ARG DNNC_URL
ENV DNNC_URL ${DNNC_URL}
ARG ROBERTA_NLI
ENV ROBERTA_NLI ${ROBERTA_NLI}
ARG CLINC_URL
ENV CLINC_URL ${CLINC_URL}
ARG TRAIN_FILE_PATH
ENV TRAIN_FILE_PATH ${TRAIN_FILE_PATH}
ARG DEV_FILE_PATH
ENV DEV_FILE_PATH ${DEV_FILE_PATH}

WORKDIR /src
RUN git clone ${DNNC_URL} .
RUN pip3 install -r /src/requirements.txt
COPY ./requirements.txt /src/service_requirements.txt
RUN pip3 install -r /src/service_requirements.txt

RUN wget ${ROBERTA_NLI}
RUN unzip roberta_nli.zip && rm roberta_nli.zip

RUN mkdir original_data
RUN wget ${CLINC_URL} -P ./original_data/
RUN python3 preprocess.py

RUN python train_dnnc.py \
--train_file_path ${TRAIN_FILE_PATH} \
--dev_file_path ${DEV_FILE_PATH} \
--oos_dev_file_path ./data/clinc150/oos/dev/ \
--do_lower_case \
--bert_nli_path ./roberta_nli/ \
--bert_model roberta-base \
--few_shot_num 5 \
--num_trials 1 \
--num_train_epochs 10 \
--learning_rate 2e-5 \
--train_batch_size 400 \
--gradient_accumulation_steps 4 \
--save_model_path saving_checkpoints \
--output_dir ./clinc150_all_dnnc/

FROM base as prod
COPY . /src
CMD gunicorn --workers=1 server:app -b 0.0.0.0:${SERVICE_PORT} --timeout=1200